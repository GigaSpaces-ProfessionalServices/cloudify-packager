#!/usr/bin/env bash

function state_error
{
    echo "ERROR: ${1:-UNKNOWN} (status $?)" 1>&2
    exit 1
}

PKG_NAME="{{ name }}"
PKG_DIR="{{ sources_path }}"
VERSION="{{ version }}"

echo -e "\nInstalling ${PKG_NAME} version ${VERSION}...\n"

if ! which pip >> /dev/null; then
    state_error "pip not in path. Please verify that pip is installed and is in the path."
fi
# Questionable. Do we want to install virtualenv for the user if it isn't already installed?
if ! which virtualenv >> /dev/null; then
    echo "Installing Virtualenv..."
    pip install --use-wheel --no-index --find-links=${PKG_DIR} virtualenv &&
fi
echo "Creating Virtualenv /cloudify..."
virtualenv /cloudify &&
if ! which cfy >> /dev/null; then
    /cloudify/bin/pip install --use-wheel --no-index --find-links=${PKG_DIR} cloudify &&
    # when the cli is built for py2.6, unless argparse is put within `install_requires`, we'll have to enable this:
    # if which yum; then
    #   /cloudify/bin/pip install --use-wheel --no-index --find-links=${PKG_DIR} argparse=#SOME_VERSION#
    # fi
else
    state_error "Cloudify's CLI appears to be installed already."
fi

echo "Cleaning up..."
rm -rf /cfy &&

echo -e "${PKG_NAME} ${VERSION} Installation completed successfully!\n"
