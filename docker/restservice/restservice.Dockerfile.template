FROM {{ image.repository }}:{{ image.tag }}
MAINTAINER {{ maintainer.name }}, {{ maintainer.email }}
# ------------------------------------------------------------------------------------------------------------------------------------------ #
# INSTALL - BASE
# ------------------------------------------------------------------------------------------------------------------------------------------ #
# add utility functions
ADD utils/ /opt/tmp/utils/
ADD NOTICE.txt /root/license
# Used by 'cfy status' impl to determine if running in container.
ENV DOCKER_ENV True
# ------------------------------------------------------------------------------------------------------------------------------------------ #
# INSTALL - MANAGER
# ------------------------------------------------------------------------------------------------------------------------------------------ #
##### ENV #####
ENV MANAGER_SERVICE_NAME {{ manager.service_name }}
ENV MANAGER_SERVICES_DIR /opt/$MANAGER_SERVICE_NAME
ENV MANAGER_VIRTUAL_ENV_DIR $MANAGER_SERVICES_DIR/env
ENV SERVER_FILES_DIR $MANAGER_SERVICES_DIR/cloudify-manager*/rest-service/manager_rest

ENV AMQPFLUX_RUN_FILE /etc/service/amqp-influx/run
ENV REST_RUN_FILE /etc/service/rest-service/run

ENV REST_CONFIG_PATH /etc/service/rest-service/guni.conf
##### ENV #####
# add run scripts and configuration
ADD amqp_influx/ /etc/service/amqp-influx/
ADD rest_service/ /etc/service/rest-service/

WORKDIR /opt/manager/

RUN echo install dependencies && \
    apt-get install -y {% for dep in manager.reqs %} {{ dep }}{% endfor %} && \
    \
    echo installing pip && \
    curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | python && \
    \
    echo install virtualenv and create one && \
    pip install virtualenv && \
    virtualenv $MANAGER_VIRTUAL_ENV_DIR && \
    \
    echo installing amqpinflux && \
    $MANAGER_VIRTUAL_ENV_DIR/bin/pip install {{ manager.modules.cloudify_amqp_influxdb }} && \
    $MANAGER_VIRTUAL_ENV_DIR/bin/pip install {{ manager.modules.cloudify_dsl_parser }} && \
    \
    echo installing rest-service && \
    /bin/bash -c 'git clone {{ manager.modules.cloudify_manager }} && \
    pushd cloudify-manager/rest-service && \
    $MANAGER_VIRTUAL_ENV_DIR/bin/pip install .' && \
    \
    echo injecting required params to run script && \
    sed -i '1s|^|MANAGER_VIRTUALENV_DIR='$MANAGER_VIRTUAL_ENV_DIR' \n|' $AMQPFLUX_RUN_FILE && \
    sed -i '1s|^|MANAGER_VIRTUALENV_DIR='$MANAGER_VIRTUAL_ENV_DIR' \n|' $REST_RUN_FILE && \
    sed -i '1s|^|MANAGER_REST_CONFIG_PATH='$REST_CONFIG_PATH' \n|' $REST_RUN_FILE && \
    sed -i '1s|^|SERVER_FILES_DIR='$SERVER_FILES_DIR' \n|' $REST_RUN_FILE && \
    sed -i '1s|^|#!/bin/bash \n|' $REST_RUN_FILE && \
    sed -i '1s|^|#!/bin/bash \n|' $AMQPFLUX_RUN_FILE && \
    \
    echo creating logs folder && \
    mkdir -p /var/log/cloudify && \
    \
    echo copying rest-service resources to resource folder && \
    cp -r /opt/manager/cloudify-manager/resources/rest-service/. /opt/manager/resources && \
    \
    echo granting run permissions to run file && \
    chmod +x $AMQPFLUX_RUN_FILE && \
    chmod +x $REST_RUN_FILE