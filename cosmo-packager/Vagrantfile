########
# Copyright (c) 2014 GigaSpaces Technologies Ltd. All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
#    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    * See the License for the specific language governing permissions and
#    * limitations under the License.

# -*- mode: ruby -*-
# vi: set ft=ruby :

BASE_BOX_NAME = 'precise64'
BASE_BOX_URI = 'http://files.vagrantup.com/precise64.box'

Vagrant.configure('2') do |config|

  config.vm.define :packager do |packager|

    packager_ip = '10.0.0.2'

    packager.vm.provider :virtualbox do |vb|
      vb.customize ['modifyvm', :id, '--memory', '1024']
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end
    packager.vm.box = BASE_BOX_NAME
    packager.vm.box_url = BASE_BOX_URI
    packager.vm.network :private_network, ip: packager_ip
    packager.vm.hostname = 'packager'

    command = "
      echo bootstrapping...

      # update
      sudo apt-get -y update &&

      # install prereqs
      sudo apt-get install -y vim make git &&
      sudo apt-get install -y python-setuptools python-dev &&
      sudo apt-get install -y rubygems &&
      sudo gem install fpm &&
      sudo apt-get purge pip
      sudo easy_install -U pip &&
      sudo wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | sudo python &&
      sudo pip install virtualenv==1.11.4 jinja2==2.7.2 pika==0.9.13 fabric==1.8.3 &&
      cd /opt && sudo git clone https://github.com/sstephenson/ruby-build.git && cd /opt/ruby-build &&
      export PREFIX=/opt/ruby-build && sudo ./install.sh &&

      # configure gem and bundler
      echo -e 'gem: --no-ri --no-rdoc\ninstall: --no-rdoc --no-ri\nupdate:  --no-rdoc --no-ri' >> ~/.gemrc

      # create packager logfile
      sudo mkdir -p /var/log/packager &&
      sudo touch /var/log/packager/packager.log &&

      # add fabric bash completion
      cd /vagrant &&
      sudo wget https://github.com/marcelor/fabric-bash-autocompletion/raw/master/fab
      sudo mv fab /etc/bash_completion.d/
      echo 'source /etc/bash_completion.d/fab' >> ~/.bashrc

      # get packages
      # cd /vagrant &&
      # sudo fab get_cosmo_components get_cosmo &&
      # sudo fab pkg_cosmo_components pkg_cosmo &&
      # sudo fab make &&

      echo bootstrap done
      echo NOTE: currently, using some of the packager's features requires that they're run as sudo.
      "

    packager.vm.provision :shell, :inline => command
  end

  config.vm.define :tester do |tester|

    tester_ip = '10.0.0.3'

    tester.vm.provider :virtualbox do |vb|
      vb.customize ['modifyvm', :id, '--memory', '2048']
    end
    tester.vm.box = BASE_BOX_NAME
    tester.vm.box_url = BASE_BOX_URI
    tester.vm.network :private_network, ip: tester_ip
    tester.vm.hostname = 'tester'

    command = "
      echo bootstrapping... &&

      # update - (optional) if you want to install additional packages on the testing server.
      # sudo apt-get -y update &&

      # install prereqs
      # sudo apt-get install -y vim

      echo bootstrap done
      "

    tester.vm.provision :shell, :inline => command
  end

end